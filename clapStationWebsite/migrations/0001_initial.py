# Generated by Django 4.2.3 on 2024-03-07 05:51

import clapStationWebsite.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='About_our_mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='our_mission/')),
            ],
        ),
        migrations.CreateModel(
            name='About_page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='About_service_page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='about_images/')),
            ],
        ),
        migrations.CreateModel(
            name='About_team_page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member', models.CharField(max_length=250)),
                ('occuption', models.CharField(max_length=250)),
                ('image', models.ImageField(upload_to='about_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Academic_page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_title', models.CharField(max_length=200)),
                ('venue', models.CharField(max_length=400)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('description', models.TextField(max_length=600)),
                ('duration', models.IntegerField()),
                ('date', models.DateField()),
                ('poster1', models.ImageField(blank=True, null=True, upload_to='academic_images/posters1')),
                ('poster2', models.ImageField(blank=True, null=True, upload_to='academic_images/posters2')),
                ('facebook', models.CharField(max_length=30)),
                ('instagram', models.CharField(max_length=30)),
                ('linkedin', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='advertisements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(default='', upload_to='advertisement/image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('mobile', models.CharField(max_length=15)),
                ('insta', models.URLField()),
                ('facebook', models.URLField()),
                ('twitter', models.URLField()),
                ('linkedin', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Contact_us',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('First_N', models.CharField(max_length=50)),
                ('Last_N', models.CharField(max_length=50)),
                ('mobileno', models.IntegerField()),
                ('emailid', models.CharField(max_length=50)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_title', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=600)),
                ('category', models.CharField(max_length=100)),
                ('duration', models.IntegerField()),
                ('venue', models.CharField(max_length=400)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('date', models.DateField()),
                ('ticket_price', models.IntegerField()),
                ('poster', models.ImageField(blank=True, null=True, upload_to='event_images/posters')),
                ('images', models.FileField(blank=True, null=True, upload_to='event_images')),
                ('event_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Jamming',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('location', models.TextField(max_length=50)),
                ('charges', models.DecimalField(decimal_places=2, max_digits=10)),
                ('seating_space', models.IntegerField()),
                ('number_of_grounds', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images_fields', models.ImageField(blank=True, default='', null=True, upload_to='profilephoto/image')),
                ('name', models.CharField(max_length=50)),
                ('Profession_title', models.CharField(max_length=100)),
                ('Fee', models.TextField()),
                ('Status', models.CharField(max_length=50)),
                ('SessionDays', models.CharField(max_length=300)),
                ('social_links', models.CharField(blank=True, max_length=100, null=True)),
                ('social_links1', models.CharField(blank=True, max_length=100, null=True)),
                ('social_links2', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='upComingEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(default='', upload_to='upcoming/image')),
                ('phone', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=50)),
                ('address', models.TextField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tutorcontact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phoneNo', models.CharField(max_length=20)),
                ('numOfcandidate', models.IntegerField()),
                ('category', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clapStationWebsite.tutor')),
            ],
        ),
        migrations.CreateModel(
            name='Signup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_image', models.ImageField(default='', upload_to='profile')),
                ('First_name', models.CharField(max_length=100)),
                ('Last_name', models.CharField(max_length=100)),
                ('mobile_email', models.CharField(max_length=50, unique=True)),
                ('day', models.IntegerField()),
                ('month', models.CharField(max_length=20)),
                ('year', models.IntegerField()),
                ('role', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profilevideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('video', models.FileField(blank=True, default='', null=True, upload_to='profilephoto/video')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_videos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profilephoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='', null=True, upload_to='profilephoto/image')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_photos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='posts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(default='', help_text=' ClapStation upload image | height: 360px | width: 640px', upload_to='posts/image', validators=[clapStationWebsite.models.validate_image_dimensions])),
                ('about', models.CharField(max_length=250)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
                ('liked', models.ManyToManyField(blank=True, default=None, related_name='liked', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(choices=[('Like', 'Like'), ('Unlike', 'Unlike')], default='Like', max_length=10)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clapStationWebsite.posts')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='jammingimage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='Jammingimages/')),
                ('jamming', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clapStationWebsite.jamming')),
            ],
        ),
        migrations.CreateModel(
            name='jammingcontact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whatsapp', models.CharField(max_length=100)),
                ('facebook', models.CharField(max_length=100)),
                ('instagram', models.CharField(max_length=100)),
                ('twitter', models.CharField(max_length=100)),
                ('contact_no', models.CharField(max_length=100)),
                ('jamming', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clapStationWebsite.jamming')),
            ],
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='event_images/')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clapStationWebsite.event')),
            ],
        ),
        migrations.CreateModel(
            name='Eventbooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(default='', max_length=100)),
                ('phoneNo', models.TextField(max_length=10)),
                ('numOfcandidate', models.IntegerField()),
                ('category', models.CharField(max_length=100)),
                ('address', models.TextField(max_length=300)),
                ('time', models.DateTimeField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clapStationWebsite.event')),
            ],
        ),
        migrations.CreateModel(
            name='Create_group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupname', models.CharField(max_length=20)),
                ('singername', models.CharField(max_length=20)),
                ('singerprofession', models.CharField(max_length=20)),
                ('singeraddress', models.CharField(max_length=20)),
                ('singerimage', models.ImageField(blank=True, default='no image found', null=True, upload_to='createsingerimage/image')),
                ('singerlinkedinid', models.CharField(max_length=50)),
                ('singerinstagramid', models.CharField(max_length=50)),
                ('singergithubid', models.CharField(max_length=50)),
                ('musicianname', models.CharField(max_length=20)),
                ('musicianprofession', models.CharField(max_length=20)),
                ('musicianaddress', models.CharField(max_length=20)),
                ('musicianimage', models.ImageField(blank=True, default='no image found', null=True, upload_to='musicianimage/image')),
                ('musicianlinkedinid', models.CharField(max_length=50)),
                ('musicianinstagramid', models.CharField(max_length=50)),
                ('musiciangithubid', models.CharField(max_length=50)),
                ('guitaristname', models.CharField(max_length=20)),
                ('guitaristprofession', models.CharField(max_length=20)),
                ('guitaristaddress', models.CharField(max_length=20)),
                ('guitaristimage', models.ImageField(blank=True, default='no image found', null=True, upload_to='guitaristimage/image')),
                ('guitaristlinkedinid', models.CharField(max_length=50)),
                ('guitaristinstagramid', models.CharField(max_length=50)),
                ('guitaristgithubid', models.CharField(max_length=50)),
                ('groupdescription', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Create_bands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bandname', models.CharField(max_length=20)),
                ('bandbudget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bandaddress', models.TextField()),
                ('bandimage', models.ImageField(blank=True, default='no image', null=True, upload_to='createband/image')),
                ('banddescription', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_date', models.DateTimeField(auto_now_add=True)),
                ('desc', models.CharField(max_length=150)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clapStationWebsite.posts')),
            ],
        ),
        migrations.CreateModel(
            name='Bandbooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(default='', max_length=100)),
                ('phoneNo', models.TextField(max_length=10)),
                ('numOfcandidate', models.IntegerField()),
                ('category', models.CharField(max_length=100)),
                ('address', models.TextField(max_length=300)),
                ('hour', models.IntegerField()),
                ('date', models.DateField()),
                ('time', models.DateTimeField()),
                ('bands', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clapStationWebsite.create_bands')),
            ],
        ),
        migrations.CreateModel(
            name='Academic_Mentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentor_image', models.ImageField(blank=True, null=True, upload_to='academic_images/mentor_image')),
                ('mentor_name', models.CharField(max_length=30)),
                ('mentor_profession', models.CharField(max_length=30)),
                ('academic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clapStationWebsite.academic_page')),
            ],
        ),
        migrations.CreateModel(
            name='Academic_Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='academic_images/gallary')),
                ('academic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clapStationWebsite.academic_page')),
            ],
        ),
        migrations.CreateModel(
            name='Academic_feestructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('functionality1', models.CharField(max_length=30)),
                ('functionality2', models.CharField(max_length=30)),
                ('functionality3', models.CharField(max_length=30)),
                ('functionality4', models.CharField(max_length=30)),
                ('academic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clapStationWebsite.academic_page')),
            ],
        ),
    ]
